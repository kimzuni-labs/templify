---
name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-*"

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Determine publish tag
        id: env
        run: |
          PUBLISH_TAG="dev"
          if [[ "$GITHUB_REF_NAME" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            PUBLISH_TAG="latest"
          fi
          echo "Publish tag: $PUBLISH_TAG"
          echo "publish_tag=$PUBLISH_TAG" >> $GITHUB_OUTPUT

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun ci

      - name: Build project
        run: bun run build

      - name: Run tests
        run: bun run test

      - name: Publish to npm
        id: publish
        run: |
          npm publish --provenance --access=public --tag "${{ steps.env.outputs.publish_tag }}"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Extract latest changelog section
        run: |
          PREV_TAG="$(git describe --tags --abbrev=0 HEAD^ 2> /dev/null)"
          if [ -z "$PREV_TAG" ]; then
            tail -n +2 CHANGELOG.md > release_notes.md
          else
            git diff "$PREV_TAG" HEAD -- CHANGELOG.md | sed -n "/^\+$/p; /^\+[^\+]/p" | sed "s/^\+//g" > release_notes.md
          fi

      - name: Create GitHub release notes
        if: ${{ steps.env.outputs.publish_tag == 'latest' }}
        uses: softprops/action-gh-release@v2
        with:
          body_path: release_notes.md
          # make_latest: ${{ steps.env.outputs.publish_tag == 'latest' }}
          # prerelease: ${{ steps.env.outputs.publish_tag != 'latest' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
